#pragma kernel CSMain

RWTexture2DArray<float> voxels;

float SampleSlope(float3 coord) {
    return pow((coord.x - 16) / 4, 2) - pow((coord.y - 16) / 4, 2) + 16 - coord.z;
}

[numthreads(8,8,8)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    float3 coordinate = float3(id.z, id.x, id.y); // take the voxel's position

    uint a = SampleSlope(coordinate + float3(1, 1, 0)) > 0 ? 1 : 0;
    uint b = SampleSlope(coordinate + float3(1, 0, 0)) > 0 ? 1 : 0;
    uint c = SampleSlope(coordinate + float3(0, 0, 0)) > 0 ? 1 : 0;
    uint d = SampleSlope(coordinate + float3(0, 1, 0)) > 0 ? 1 : 0;
    uint e = SampleSlope(coordinate + float3(1, 1, 1)) > 0 ? 1 : 0;
    uint f = SampleSlope(coordinate + float3(1, 0, 1)) > 0 ? 1 : 0;
    uint g = SampleSlope(coordinate + float3(0, 0, 1)) > 0 ? 1 : 0;
    uint h = SampleSlope(coordinate + float3(0, 1, 1)) > 0 ? 1 : 0;

    uint VCase = 1*a + 2*b + 4*c + 8*d + 16*e + 32*f + 64*g + 128*h;
    
    voxels[id.xyz] = VCase/1000.0;
}
